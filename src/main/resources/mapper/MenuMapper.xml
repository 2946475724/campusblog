<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zs.campusblog.mapper.MenuMapper">
    <resultMap id="BaseResultMap" type="com.zs.campusblog.entity.Menu">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="component" javaType="java.lang.Object" property="component"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <association property="meta" javaType="com.zs.campusblog.entity.MenuMeta">
            <result column="keep_alive" property="keepAlive" jdbcType="BIT"/>
            <result column="require_auth" property="requireAuth" jdbcType="BIT"/>
        </association>
    </resultMap>
    <resultMap id="Menus2" type="com.zs.campusblog.entity.Menu" extends="BaseResultMap">
        <collection property="children" ofType="com.zs.campusblog.entity.Menu">
            <id column="id2" property="id" jdbcType="INTEGER"/>
            <result column="url2" property="url" jdbcType="VARCHAR"/>
            <result column="path2" property="path" jdbcType="VARCHAR"/>
            <result column="component2" property="component" jdbcType="VARCHAR"/>
            <result column="name2" property="name" jdbcType="VARCHAR"/>
            <result column="icon2" property="icon" jdbcType="VARCHAR"/>
            <result column="parentId2" property="parentId" jdbcType="INTEGER"/>
            <result column="enabled2" property="enabled" jdbcType="BIT"/>
            <association property="meta" javaType="com.zs.campusblog.entity.MenuMeta">
                <result column="keepAlive2" property="keepAlive" jdbcType="BIT"/>
                <result column="requireAuth2" property="requireAuth" jdbcType="BIT"/>
            </association>
        </collection>
    </resultMap>
    <resultMap id="MenuWithRole" type="com.zs.campusblog.entity.Menu" extends="BaseResultMap">
        <collection property="roles" ofType="com.zs.campusblog.entity.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rdescription" property="description"/>
        </collection>
    </resultMap>
    <resultMap id="MenuWithChildren" type="com.zs.campusblog.entity.Menu" extends="BaseResultMap">
        <id column="id1" property="id"/>
        <result column="name1" property="name"/>
        <collection property="children" ofType="com.zs.campusblog.entity.Menu">
            <id column="id2" property="id"/>
            <result column="name2" property="name"/>
            <collection property="children" ofType="com.zs.campusblog.entity.Menu">
                <id column="id3" property="id"/>
                <result column="name3" property="name"/>
            </collection>
        </collection>
    </resultMap>
    <select id="getAllMenu" resultMap="MenuWithChildren">
        SELECT
            m.*, r.id AS rid,
            r. NAME AS rname,
            r.description AS rdescription
        FROM
            menu m
        LEFT JOIN role_menu rm ON m.id = rm.menu_id
        LEFT JOIN role r ON rm.role_id = r.id
        WHERE
            m.ENABLEd = TRUE
        ORDER BY
            m.id DESC
    </select>
    <select id="getAllMenusWithRole" resultMap="MenuWithRole">
        SELECT
            m.*, r.`id` AS rid,
            r.`name` AS rname,
            r.`description` AS rdescription
        FROM
            menu m,
            role_menu rm,
            role r
        WHERE
            m.`id` = rm.`menu_id`
        AND rm.`role_id` = r.`id`
        ORDER BY
            m.`id`
    </select>
    <select id="getMenusByUserId" resultMap="Menus2">
        SELECT DISTINCT
            m1.*, m2.`id` AS id2,
            m2.`component` AS component2,
            m2.`enabled` AS enabled2,
            m2.`icon` AS icon2,
            m2.`keep_alive` AS keepAlive2,
            m2.`name` AS name2,
            m2.`parent_id` AS parentId2,
            m2.`require_auth` AS requireAuth2,
            m2.`path` AS path2
        FROM
            menu m1,
            menu m2,
            user_role ur,
            role_menu rm
        WHERE
            m1.`id` = m2.`parent_id`
        AND ur.`user_id` = #{userId}
        AND ur.`role_id` = rm.`role_id`
        AND rm.`menu_id` = m2.`id`
        AND m2.`enabled` = TRUE
        ORDER BY
            m1.`id`,
            m2.`id`
    </select>
    <select id="menuTree" resultMap="BaseResultMap">
        SELECT
            m1.`id`,
            m1.`name`,
            m2.`id` AS id2,
            m2.`name` AS name2,
            m3.`id` AS id3,
            m3.`name` AS name3
        FROM
            menu m1,
            menu m2,
            menu m3
        WHERE
            m1.`id` = m2.`parentId`
        AND m2.`id` = m3.`parentId`
        AND m3.`enabled` = TRUE
    </select>
    <select id="getMenusByRoleId" resultType="Integer">
        SELECT menu_id as mid from role_menu WHERE role_id=#{rid}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from menu where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.zs.campusblog.entity.Menu">
        insert into menu(id, url, path, component, name, icon, keep_alive, require_auth, parent_id, enabled)
        values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
      #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
      #{keepalive,jdbcType=BIT}, #{requireauth,jdbcType=BIT}, #{parentid,jdbcType=INTEGER},
      #{enabled,jdbcType=BIT})
    </insert>
</mapper>