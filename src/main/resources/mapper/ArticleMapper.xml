<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zs.campusblog.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.zs.campusblog.entity.Article">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="cover_image" property="coverImage" jdbcType="VARCHAR"/>
        <result column="cateName" property="cateName" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="tags" property="tags" jdbcType="VARCHAR"/>
        <result column="view_count" property="viewCount" jdbcType="INTEGER"/>
        <result column="like_count" property="likeCount" jdbcType="INTEGER"/>
        <result column="comment_count" property="commentCount" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="BIT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <collection column="name" property="tagList" ofType="com.zs.campusblog.entity.Tag">
            <id column="tagId" property="id" jdbcType="INTEGER"/>
            <result column="tagName" property="name" jdbcType="VARCHAR"/>
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        </collection>
    </resultMap>
    <resultMap id="BaseResultMap1" type="com.zs.campusblog.entity.Article">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="BIT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!--根据id获取文章-->
    <select id="getArticleById" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
            a.*, t.`name` as tagName,
            t.`id` AS tagId,
            u.`username`,
            c.`name` as cateName
        FROM
            article a
        LEFT JOIN article_tag at ON a.`id` = at.`article_id`
        LEFT JOIN tag t ON at.`tag_id` = t.`id`
        LEFT JOIN user u ON a.`user_id` = u.`id`
        LEFT JOIN category c ON a.`category_id` = c.`id`
        WHERE
            a.id = #{id}
    </select>
    <select id="getAllArticle" resultMap="BaseResultMap">
        SELECT
            a.*, t.`name` as tagName,
            t.`id` AS tagId,
            u.`username`,
            c.`name` as cateName
        FROM
            article a
        LEFT JOIN article_tag at ON a.`id` = at.`article_id`
        LEFT JOIN tag t ON at.`tag_id` = t.`id`
        LEFT JOIN user u ON a.`user_id` = u.`id`
        LEFT JOIN category c ON a.`category_id` = c.`id`
    </select>
    <select id="getArticleList" resultMap="BaseResultMap">

    </select>
    <!--获取文章总数-->
    <select id="getArticleCount" resultType="integer">
        select count(*) from article
    </select>
    <!--添加文章-->
    <insert id="addArticle" parameterType="com.zs.campusblog.entity.Article" useGeneratedKeys="true" keyProperty="id">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            title,content,category_id,user_id,status,create_time
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            #{title, jdbcType=VARCHAR},
            #{content, jdbcType=VARCHAR},
            #{category_id, jdbcType=INTEGER},
            #{user_id, jdbcType=INTEGER},
            #{status, jdbcType=INTEGER},
            #{create_time, jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <!--根据文章id更新文章-->
    <update id="updateArticleById" parameterType="com.zs.campusblog.entity.Article">
        update article
        <set>
            <if test="title != null">
                #{title, jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status, jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id, jdbcType=INTEGER}
    </update>
    <!--根据条件查询文章-->
    <select id="getArticleByCondition" resultType="com.zs.campusblog.entity.Article" parameterType="com.zs.campusblog.entity.dto.ArticleConditionDTO">
        select * article as a
        <where>
            <if test="title != null">
                and a.title like concat('%',#{title, jdbcType=VARCHAR},'%')
            </if>
        </where>
        order by a.id desc
    </select>
    <!--根据id删除文章-->
    <delete id="deleteArticleById" parameterType="integer">
        DELETE a,at FROM article as a LEFT JOIN article_tag as at ON a.id = at.article_id WHERE a.id = #{id}
    </delete>
</mapper>